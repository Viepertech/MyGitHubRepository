package test;

{   private String name;
private int groupCount; //Part of price, like the 2 in 2 for $1.99.
private double groupPrice; //Part of price, like the $1.99 in 2 for $1.99.
private int numberBought; //Total number being purchased.
public Purchase () 
{		name = "no name";
		groupCount = 0;
		groupPrice = 0;
		numberBought = 0;
}
public Purchase (String name, int groupCount,
					double groupPrice, int numberBought)
{
	this.name = name;
	this.groupCount = groupCount;
	this.groupPrice = groupPrice;
	this.numberBought = numberBought;
}
  public void setName(String name)
  { 
   	this.name = name;    
  }
/**     Sets price to count pieces for $costForCount.
		For example, 2 for $1.99.      */
public void setPrice(int count, double costForCount)
{
    if ((count <= 0) || (costForCount <= 0))
    {
        System.out.println("Error: Bad parameter in setPrice.");
        System.exit(0);
    }
    else
    {
        groupCount = count;
        groupPrice = costForCount;
    }
}
public void setNumberBought(int number)
{
    if (number <= 0)
    {
        System.out.println("Error: Bad parameter in setNumberBought.");
        System.exit(0);
    }
    else
        numberBought = number;
}
public String getName( )
{
    return name;
}
public double getTotalCost( )
{
    return ((groupPrice/groupCount)*numberBought);
}
public double getUnitCost( )
{        return (groupPrice/groupCount);
}
public int getNumberBought( )
{        return numberBought;
}
/**    Gets price and number being purchased from keyboard.    */
public void readInput( )
{
  Scanner scan = new  Scanner(System.in);
    System.out.println("Enter name of item you are purchasing:");
    name = scan.nextLine( );
    System.out.println("Enter price of item on two lines.");
    System.out.println("For example, 3 for $2.99 is entered as");
    System.out.println("3");
    System.out.println("2.99");
    System.out.println("Enter price of item on two lines, now:");
    groupCount = scan.nextInt( );
    groupPrice = scan.nextDouble( );
    while ((groupCount <= 0) || (groupPrice <= 0))
    {//Try again:
        System.out.println(
               "Both numbers must be positive. Try again.");
        System.out.println("Enter price of item on two lines.");
        System.out.println(
                        "For example, 3 for $2.99 is entered as");
        System.out.println("3");
        System.out.println("2.99");
        System.out.println(
                      "Enter price of item on two lines, now:");
        groupCount = scan.nextInt( );
        groupPrice = scan.nextDouble( );
    }
    System.out.println("Enter number of items purchased:");
    numberBought = Scan.nextInt( );
    while (numberBought <= 0)
    {//Try again:
        System.out.println(
                   "Number must be positive. Try again.");
        System.out.println("Enter number of items purchased:");
        numberBought = scan.nextInt( );
    }
}
/**     Outputs price and number being purchased to screen.    */
public void writeOutput( )
{
    System.out.println(numberBought + " " + name);
    System.out.println("at " + groupCount
                             + " for $" + groupPrice);
}

public Purchase testQuestion(Purchase p1, int newX)
{
	newX = 20;
	this.setName("pears");
	p1.setName("oranges");
	p1 = new Purchase("kiwi", 6, 3.00, 3);
	Purchase p2 = new Purchase("banana", 5, 4.50, 10);
	return p2;
}
}
